#!/bin/bash
#Defaults
#shopt -s expand_aliases
pwphome=~/.pwp
file=$pwphome/pwp.asc
efile=$file.gpg
cfg=$pwphome/pwp.cfg
umask 077

#Functions
function getpwd {
	head -c500 /dev/urandom | LC_CTYPE=C tr -dc "A-Za-z0-9" | cut -c 1-$pw_len
}

function do_config {
	echo "Writing config file"
	read -p "Enter your gpg username: " gpg_user
	read -p "System Type (1=linux, 2=mac): " sys_type
	read -p "Max length for randomly generated passwords (ie. 8): " pw_len
	read -p "Hostname of remote site to push/pull pw database (ie. pwp@host.somesite.com:/home/user/): [Note leave blank to skip]: " remote
	if [ -n "$remote" ]
		then
		read -p "Name of ssh identity file in .pwp directory (eg. id_pwp_rsa): " id_file
	fi
}

function do_push {
	scp -i $pwphome/$id_file $efile $remote
}

function do_pull {
	sd=$(date +%s)
	cp $efile $efile.$sd	
	scp -i $pwphome/$id_file $remote/pwp.asc.gpg $pwphome
}

function print_usage {
	echo
	echo
	echo "Usage: pwp [command]"
	echo
	echo "Command ="
	echo
	echo "get:		Get a password and put in paste buffer"
	echo "set:		Define a new password (if pw is left blank will be randomly generated)"
	echo "list:		List all site / usernames in file"
	echo "config: 	Set configuration defaults (note: this must be completed first for pwp to function)"
	echo "edit:		Manually edit pwp file (via vi)"
	echo "pw:		Just print out a random password"
	echo "push:		Copy pwp database file to remote site"
	echo "pull:		Copy pwp database from remote site locally"
	echo
}

#Check to see if action is set
mode=$1
site=$2
if [ -n $mode ] 
	then
	source ~/.pwp/pwp.cfg
	case $mode in
		"get")
			echo "Get mode"
			if [ -z $site ]
				then echo "You must specify a site (ie. pwp get google)"
				exit 3
			fi
			mode=1
			;;
		"set")
			echo "Set mode"
			if [ -z $site ]
				then echo "You must specify a site (ie. pwp set google)"
				exit 3
			fi
			mode=2
			;;
		"list")
			echo "Listing sites"
			mode=3
			;;
		"edit")
			echo "Editing file"
			mode=4
			;;
		"config")
			echo "Configuring pwp"
			mode=5
			;;
		"pw")
			pw=$(getpwd)
			echo $pw
			exit 0
			;;
		"push")
			do_push
			exit 0
			;;
		"pull")
			do_pull
			exit 0
			;;
		*)
			print_usage	
			exit 2
			;;
	esac
fi
if [ -z $mode ]
	then echo "You need to specify an action (get / set)"
	exit 2
fi
#Check to see gpg is installed
test=$(gpg --version)
if [ $? -ne 0 ]
then
	echo "You don't have gpg installed"
	exit 1
fi

#Read config file
if [ -f $cfg ]
	then 
	source ~/.pwp/pwp.cfg

	if [ $sys_type -eq 1 ]
		then 
		#linux
		clipcopy="xclip -selection clipboard"
		clippaste="xclip -o -selection clipboard"
	fi
	if [ $sys_type -eq 2 ]
		then
		#mac
		echo "Setting mode as Mac"
		clipcopy="pbcopy"
		clippaste="pbpaste"
	fi	
else
	echo "$cfg not found, entering Configuration mode"
	mode=5
fi

#Get mode. 
if [ $mode -eq 1 ] 
	then
	read -p "Enter username (or blank to skip): " user
	if [ -n "$user" ]
		then
		echo "User: $user"
		#linesfull=$(gpg -q -d $efile | grep $site | grep $user)
		lines=$(gpg -q -d $efile | awk 'BEGIN {x=1}{print x": "$1" " $2" "$3; x++}' | grep $site | grep $user)
	else
		lines=$(gpg -q -d $efile | awk 'BEGIN {x=1}{print x": "$1" "$2" "$3; x++}' | grep $site)
		#linesfull=$(gpg -q -d $efile | grep $site)
	fi
	cnt=$(echo "$lines" | wc -l)
	if [ $cnt -gt 1 ]
		then 
		echo 
		echo "More than one entry found for this site / username combination."
		echo
		echo "Please choose an entry below:"
		cnt=0
		for item in "$lines"
			do
			echo "$item" | awk '{print "Line "$1 " "$2" "$3}'
			done
		read -p "Please select specific line above to continue: " pickline
		lines=$(echo "$lines" | grep $pickline)
		echo $lines
	fi
	lines=$(echo "$lines" | awk '{print $2" "$3" "$4" "}')
	usrname=$(echo "$lines" | awk '{print $2}')
	pass=$(echo "$lines" | awk '{print $3}')
	passlen=$(echo $pass | wc -c)
	if [ $passlen -lt 2 ] 
		then
		echo
		echo "Cannot find entry for that site / username"
		exit 11
		echo
	fi 
	echo 
	echo "Username for this site is: $usrname"
	oldclip=$(eval $clippaste)
	printf "%s" $pass | eval $clipcopy
	echo "Password is now in clipboard buffer for next 30 secs"
	sleep 30
	echo "Buffer reset"
	echo $oldclip | eval $clipcopy
fi

#Set mode. 
if [ $mode -eq 2 ]
	then
	gpg -q -d $efile > $file
	echo
	echo
	read -p "Enter username for this site: " user
	read -s -p "Enter password to set for this site (or leave blank to generate random password): " pass
	if [ -n "$pass" ]
		then 
		echo $site $user $pass >> $file
	else
		echo "Generating random password"
		pass=$(getpwd)
		echo $site $user $pass >> $file
	fi
	gpg -q -e --yes -r $gpg_user $file
	rm $file
	echo
	read -n 1 -p "Would you like to copy this password into clipboard for next 30 secs? (y/n): " yesno
	if [ $yesno = "y" ]
		then
		oldclip=$(eval $clippaste)
		printf "%s" $pass | eval $clipcopy
		echo
		echo "Password is now in clipboard buffer for next 30 secs"
		sleep 30
		echo "Buffer reset"
		echo $oldclip | eval $clipcopy
	fi
	echo
fi
#List mode.
if [ $mode -eq 3 ]
	then
	thelist=$(gpg -q -d $efile | grep -v ^* | awk '{printf "%15s\t%-15s\n", $1, $2}')
	echo
	echo "Site name       |           User name"
	echo "-------------------------------------"
	echo "$thelist"
	echo
fi
#Edit mode.
if [ $mode -eq 4 ]
	then
	gpg -q -d $efile > $file
	vi $file
	gpg -q -e --yes -r $gpg_user $file
	rm $file
fi
#Config mode.
if [ $mode -eq 5 ]
	then
	#Add config file
	mkdir ~/.pwp
	do_config
	echo "gpg_user=$gpg_user" > $cfg
	echo "sys_type=$sys_type" >> $cfg
	echo "pw_len=$pw_len" >> $cfg
	echo "remote=$remote" >> $cfg
	echo "id_file=$id_file" >> $cfg
	echo "Checking to see if $efile exist..."
	if [ -f $efile ]
	then
		echo "pwp file already exist."
	else
		echo "$efile doesn't exist, creating"
		touch $file
		#Put a salt in file to reduce empty file analysis 
		echo "*$RANDOM $RANDOM $RANDOM $RANDOM" > $file
		gpg -q -e --yes -r $gpg_user $file
		rm $file
	fi
fi
